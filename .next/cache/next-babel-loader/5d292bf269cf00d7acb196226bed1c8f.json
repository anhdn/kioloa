{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/anhdang/IdeaProject/kioloa/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport var login = function login(_ref) {\n  var token = _ref.token;\n  cookie.set('token', token, {\n    expires: 1\n  });\n  Router.push('/profile');\n};\nexport var auth = function auth(ctx) {\n  var _nextCookie = nextCookie(ctx),\n      token = _nextCookie.token,\n      userToken = _nextCookie.userToken;\n  /*\r\n   * If `ctx.req` is available it means we are on the server.\r\n   * Additionally if there's no token it means the user is not logged in.\r\n  //  */\n  // if (ctx.req && !token) {\n  //   ctx.res.writeHead(302, { Location: '/login' })\n  //   ctx.res.end()\n  // }\n  // // We already checked for server. This should only happen on client.\n  // if (!token) {\n  //   Router.push('/login')\n  // }\n\n\n  return {\n    token: token,\n    userToken: userToken\n  };\n};\nexport var logout = function logout() {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', _Date$now());\n  Router.push('/login');\n};\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var Wrapper = function Wrapper(props) {\n    var syncLogout = function syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/login');\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener('storage', syncLogout);\n      return function () {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  };\n\n  Wrapper.getInitialProps = function _callee(ctx) {\n    var token;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = auth(ctx); // console.log('token>>>>', token)\n\n            return _context.abrupt(\"return\", {\n              token: token // const componentProps =\n              //   WrappedComponent.getInitialProps &&\n              //   (await WrappedComponent.getInitialProps(ctx))\n              // return { ...componentProps, token }\n\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["/Users/anhdang/IdeaProject/kioloa/utils/auth.js"],"names":["useEffect","Router","nextCookie","cookie","login","token","set","expires","push","auth","ctx","userToken","logout","remove","window","localStorage","setItem","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","key","console","log","addEventListener","removeEventListener","removeItem","getInitialProps"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAClCF,EAAAA,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAA3B;AACAN,EAAAA,MAAM,CAACO,IAAP,CAAY,UAAZ;AACD,CAHM;AAKP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,GAAG,EAAI;AAAA,oBACIR,UAAU,CAACQ,GAAD,CADd;AAAA,MACjBL,KADiB,eACjBA,KADiB;AAAA,MACVM,SADU,eACVA,SADU;AAEzB;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;AAAEN,IAAAA,KAAK,EAALA,KAAF;AAASM,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CAhBM;AAkBP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BT,EAAAA,MAAM,CAACU,MAAP,CAAc,OAAd,EAD0B,CAE1B;;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsC,WAAtC;AACAf,EAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD,CALM;AAOP,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAAAC,gBAAgB,EAAI;AAC9C,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,QAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B,UAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EAA4B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAxB,QAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACD;AACF,KALD;;AAOAR,IAAAA,SAAS,CAAC,YAAM;AACdc,MAAAA,MAAM,CAACY,gBAAP,CAAwB,SAAxB,EAAmCL,UAAnC;AAEA,aAAO,YAAM;AACXP,QAAAA,MAAM,CAACa,mBAAP,CAA2B,SAA3B,EAAsCN,UAAtC;AACAP,QAAAA,MAAM,CAACC,YAAP,CAAoBa,UAApB,CAA+B,QAA/B;AACD,OAHD;AAID,KAPQ,EAON,CAAC,IAAD,CAPM,CAAT;AASA,WAAO,MAAC,gBAAD,eAAsBR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAlBD;;AAoBAD,EAAAA,OAAO,CAACU,eAAR,GAA0B,iBAAMnB,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBL,YAAAA,KADkB,GACVI,IAAI,CAACC,GAAD,CADM,EAExB;;AAFwB,6CAGjB;AAAEL,cAAAA,KAAK,EAALA,KAAF,CACP;AACA;AACA;AAEA;;AALO,aAHiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAWA,SAAOc,OAAP;AACD,CAjCM","sourcesContent":["import { useEffect } from 'react'\r\nimport Router from 'next/router'\r\nimport nextCookie from 'next-cookies'\r\nimport cookie from 'js-cookie'\r\n\r\nexport const login = ({ token }) => {\r\n  cookie.set('token', token, { expires: 1 })\r\n  Router.push('/profile')\r\n}\r\n\r\nexport const auth = ctx => {\r\n  const { token, userToken } = nextCookie(ctx)\r\n  /*\r\n   * If `ctx.req` is available it means we are on the server.\r\n   * Additionally if there's no token it means the user is not logged in.\r\n  //  */\r\n  // if (ctx.req && !token) {\r\n  //   ctx.res.writeHead(302, { Location: '/login' })\r\n  //   ctx.res.end()\r\n  // }\r\n  // // We already checked for server. This should only happen on client.\r\n  // if (!token) {\r\n  //   Router.push('/login')\r\n  // }\r\n\r\n  return { token, userToken }\r\n}\r\n\r\nexport const logout = () => {\r\n  cookie.remove('token')\r\n  // to support logging out from all windows\r\n  window.localStorage.setItem('logout', Date.now())\r\n  Router.push('/login')\r\n}\r\n\r\nexport const withAuthSync = WrappedComponent => {\r\n  const Wrapper = props => {\r\n    const syncLogout = event => {\r\n      if (event.key === 'logout') {\r\n        console.log('logged out from storage!')\r\n        Router.push('/login')\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      window.addEventListener('storage', syncLogout)\r\n\r\n      return () => {\r\n        window.removeEventListener('storage', syncLogout)\r\n        window.localStorage.removeItem('logout')\r\n      }\r\n    }, [null])\r\n\r\n    return <WrappedComponent {...props} />\r\n  }\r\n\r\n  Wrapper.getInitialProps = async ctx => {\r\n    const token = auth(ctx)\r\n    // console.log('token>>>>', token)\r\n    return { token }\r\n    // const componentProps =\r\n    //   WrappedComponent.getInitialProps &&\r\n    //   (await WrappedComponent.getInitialProps(ctx))\r\n\r\n    // return { ...componentProps, token }\r\n  }\r\n\r\n  return Wrapper\r\n}\r\n"]},"metadata":{},"sourceType":"module"}